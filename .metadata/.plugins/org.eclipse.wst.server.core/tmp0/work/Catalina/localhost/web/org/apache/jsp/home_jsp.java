/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-09 17:29:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Connection con; //ì»¤ë¥ì ì¤ë¹
	Class.forName("com.mysql.cj.jdbc.Driver"); //ì ì¬ì¥ì°©

	String url = "jdbc:mysql://localhost:3305/nothing"; //ì íë²í¸
	String id = "root"; //ìì´ë
	String pwd = "1234"; //ë¹ë°ë²í¸

	con = DriverManager.getConnection(url, id, pwd);
	Statement stmt = con.createStatement(); //sql ìë ¥ì°½ ë§ë  ê²

	ResultSet rs = stmt.executeQuery("SELECT * FROM USER_INFO02");
	//ResultSetì SELECTë¬¸ì ê²°ê³¼ë¥¼ ì ì¥íë ê°ì²´
	//executeQuery 1. ìíê²°ê³¼ë¡ ResultSet ê°ì²´ì ê°ì ë°íí©ëë¤. 2. SELECT êµ¬ë¬¸ì ìíí  ë ì¬ì©ëë í¨ììëë¤.
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>ë²í¸</th>\r\n");
      out.write("			<th>ìì´ë</th>\r\n");
      out.write("			<th>ì´ë¦</th>\r\n");
      out.write("			<th>ì´ë©ì¼</th>\r\n");
      out.write("			<th>ì£¼ì</th>\r\n");
      out.write("			<th>ë¹ë°ë²í¸</th>\r\n");
      out.write("			<th>ìëìì¼</th>\r\n");
      out.write("			<th>ì±ë³</th>\r\n");
      out.write("			<th>ë ì§</th>\r\n");
      out.write("			<th>ìê°</th>\r\n");
      out.write("			<th>outdate?</th>\r\n");
      out.write("			<th>active?</th>\r\n");
      out.write("			<th>ìì¤?</th>\r\n");
      out.write("			<th>ì§ë¬´</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		");

		while (rs.next()) {
			int uiNum = rs.getInt("UI_NUM");
			String uiId = rs.getString("UI_ID");
			String uiName = rs.getString("UI_NAME");
			String uiEmail = rs.getString("UI_EMAIL");
			String uiAddress = rs.getString("UI_ADDRESS");
			String uiPwd = rs.getString("UI_PWD");
			String uiBirth = rs.getString("UI_BIRTH");
			String uiTrans = rs.getString("UI_TRANS");
			String credat = rs.getString("CREDAT");
			String cretim = rs.getString("CRETIM");
			String outdat = rs.getString("OUTDAT");
			String active = rs.getString("ACTIVE");
			String uiLvl = rs.getString("UI_LVL");
			String uiDuties = rs.getString("UI_DUTIES");
			
			out.println("<td>" + uiNum + "</td>");
			out.println("<td>" + uiId + "</td>");
			out.println("<td>" + uiName + "</td>");
			out.println("<td>" + uiAddress + "</td>");
			out.println("<td>" + uiPwd + "</td>");
			out.println("<td>" + uiBirth + "</td>");
			out.println("<td>" + uiTrans + "</td>");
			out.println("<td>" + credat + "</td>");
			out.println("<td>" + cretim + "</td>");
			out.println("<td>" + outdat + "</td>");
			out.println("<td>" + active + "</td>");
			out.println("<td>" + uiLvl + "</td>");
			out.println("<td>" + uiDuties + "</td>");
			out.println("</tr>");
		}
		
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
